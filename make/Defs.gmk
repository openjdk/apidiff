#
# Copyright (c) 1996, 2018, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# include host-specific defs, if any
-include Defs-$(shell hostname).gmk

# TOPDIR set in Makefile
ABSTOPDIR = $(shell cd $(TOPDIR); pwd)

# clobber settings from user's environment
JAVA_HOME=
CLASSPATH=
JAVA_COMPILER=
LD_LIBRARY_PATH=

#----------------------------------------------------------------------
#
# Support for Cygwin

SYSTEM_UNAME := $(shell uname)

# Where is unwanted output to be delivered?
# On Windows, MKS uses the special file "NUL", cygwin uses the customary unix file.
ifeq ($(SYSTEM_UNAME), Windows_NT)
DEV_NULL = NUL
else
DEV_NULL = /dev/null
endif

ifneq (,$(findstring CYGWIN,$(SYSTEM_UNAME)))
USING_CYGWIN = true
endif

ifdef USING_CYGWIN
define FullPath
$(shell cygpath -a -m $1 2> $(DEV_NULL))
endef
define PosixPath
$(shell cygpath -a -u $1 2> $(DEV_NULL))
endef
else
define FullPath
$(abspath $1)
endef
define PosixPath
$1
endef
endif

ifndef BUILDDIR
  BUILDDIR = $(TOPDIR)/build
endif
override BUILDDIR := $(call FullPath, $(BUILDDIR))

BUILDTESTDIR=$(BUILDDIR)/test


#----------------------------------------------------------------------
#
# Parameters to control what to build and test with.

JAVA    = $(JDKHOME)/bin/java
JAVAC   = $(JDKHOME)/bin/javac
JAVADOC = $(JDKHOME)/bin/javadoc
JAR     = $(JDKHOME)/bin/jar

#----- Unix commands

AWK     = /usr/bin/awk
CAT     = /bin/cat
CHMOD   = /bin/chmod
CP      = /bin/cp
DIFF    = /usr/bin/diff
ECHO    = /bin/echo
FIND    = /usr/bin/find
GREP    := $(shell if [ -r /bin/grep ]; then echo /bin/grep ; else echo /usr/bin/grep ; fi )
LN      = /bin/ln
MKDIR   = /bin/mkdir
MV      = /bin/mv
PANDOC  = $(shell if [ -r /usr/bin/pandoc ]; then \
		echo /usr/bin/pandoc ; \
	elif [ -r /usr/local/bin/pandoc ]; then \
		echo /usr/local/bin/pandoc ; \
	elif [ -r /opt/homebrew/bin/pandoc ]; then \
		echo /opt/homebrew/bin/pandoc ; \
	else \
		echo /bin/echo "pandoc not available" ; \
	fi )
PERL    = /usr/bin/perl
PRINTF  = /usr/bin/printf
RM      = /bin/rm -rf
SED     := $(shell if [ -r /bin/sed ]; then echo /bin/sed ; else echo /usr/bin/sed ; fi )
SH      = /bin/sh
SORT    = /usr/bin/sort
TEST    = /usr/bin/test
# tidy needs to support HTML 5; typically means `tidy -version` reports 5.x or higher
ifeq ($(SYSTEM_UNAME), Darwin)
TIDY 	:= $(shell if [ -r /usr/local/bin/tidy ]; then \
		echo /usr/local/bin/tidy ; \
	elif [ -r /opt/homebrew/bin/tidy ]; then \
		echo /opt/homebrew/bin/tidy ; \
	else \
		echo /usr/bin/tidy ; \
	fi )
else
TIDY	= /usr/bin/tidy
endif
TOUCH   = /usr/bin/touch
UNZIP   = /usr/bin/unzip
WC      = /usr/bin/wc
ZIP     = /usr/bin/zip


#----------------------------------------------------------------------
#
# Identification of parts of the system

SRCDIR = $(TOPDIR)/src
JAVADIR = $(SRCDIR)/share/classes
SRCDOCDIR = $(SRCDIR)/share/doc
SRCSHAREBINDIR = $(SRCDIR)/share/bin
TESTDIR = $(TOPDIR)/test

CLASSDIR = $(BUILDDIR)/classes
ABSCLASSDIR = $(cd $(CLASSDIR); pwd)

IMAGES_DIR = $(BUILDDIR)/images
APIDIFF_IMAGEDIR = $(IMAGES_DIR)/apidiff
APIDIFF_IMAGEDOCDIR = $(APIDIFF_IMAGEDIR)/doc
APIDIFF_IMAGEJARDIR = $(APIDIFF_IMAGEDIR)/lib
ABS_APIDIFF_IMAGEJARDIR = $(shell cd $(APIDIFF_IMAGEJARDIR); pwd)

# source bundle locations
IMAGESRC_SRCDIR = $(IMAGESRC_TOPDIR)/src/share/classes

#----------------------------------------------------------------------
#
# Version tags
#
BUILD_VERSION = 0.0
BUILD_MILESTONE = dev
BUILD_NUMBER = b00

# munge the BUILD values suitable for use in the bundle name
ZIPSFX_VERSION_sh = echo '$(BUILD_VERSION)'
ZIPSFX_MILESTONE_sh = echo '$(BUILD_MILESTONE)' | sed -e 's/\(..*\)/-\1/'
ZIPSFX_BUILD_sh = echo '$(BUILD_NUMBER)' | sed -e 's|[^[0-9]||g' | xargs printf "%d"

VERBOSE_ZIP_SUFFIX = $(shell $(ZIPSFX_VERSION_sh))$(shell $(ZIPSFX_ MILESTONE_sh))+$(shell $(ZIPSFX_BUILD_sh))_bin